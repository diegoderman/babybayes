geom_vline(aes(xintercept=mean(SNR, na.rm = TRUE)), # mean
color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median(SNR, na.rm = TRUE)), # median
color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[1]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[2]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
labs(title=title,
x ="SNR", y = "vertices", subtitle = "red: median\nblue:mean")
#bp = ggplot(df, aes(x=SNR)) + geom_boxplot(notch = TRUE)
#grid.arrange(bp, plot, nrow = 1)
ggsave(filename = paste0(snr_png_fname, "_hist.png" ), plot = plot)
# img <- readPNG(system.file("img", "Rlogo.png", package="png"))
# g <- rasterGrob(img, interpolate=TRUE)
#
# qplot(1:10, 1:10, geom="blank") +
#   annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
#   geom_point()
population = c(population, snr_mat)
}
population = population[-(1:57700)]
saveRDS(population, file = paste0(dhcp_path(), "/snr_surface/population.rds"))
?geom_histogram
plot = ggplot(df, aes(x=SNR)) +
geom_histogram(aes(y=..count..), colour="darkgray", fill="gray", binwidth = 1, na.rm = TRUE, show.legend = TRUE, pad = TRUE) +
geom_vline(aes(xintercept=mean(SNR, na.rm = TRUE)), # mean
color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median(SNR, na.rm = TRUE)), # median
color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[1]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[2]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
labs(title=title,
x ="SNR", y = "vertices", subtitle = "red: median\nblue:mean")
plot
i
i = 20
plot = ggplot(df, aes(x=SNR)) +
geom_histogram(aes(y=..count..), colour="darkgray", fill="gray", binwidth = 1, na.rm = TRUE, show.legend = TRUE, pad = TRUE) +
geom_vline(aes(xintercept=mean(SNR, na.rm = TRUE)), # mean
color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median(SNR, na.rm = TRUE)), # median
color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[1]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[2]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
labs(title=title,
x ="SNR", y = "vertices", subtitle = "red: median\nblue:mean")
plot
# rel2_snr-show-gICA.r
# this scripts just loads the snr maps for 43wk (gICA subjects) and saves images
# 2021-12-01 - Diego
# load packages
devtools::load_all(path = "~/dhcpr")
library("ciftiTools")
wbpath = wb_path() # "~/dev-dhcp/workbench/bin_rh_linux64/wb_command" #carbonate
ciftiTools.setOption('wb_path', wbpath)
library(ggplot2)
library(gridExtra)
library(png)
library(grid)
# all subjects in table
table_fname = paste0("~/dev-dhcp/single-pipeline/results/rel2_gICA_s-24.csv")
sessions_list = dhcp_list(table_fname)
population = vector(mode = "numeric", length = 57700)
for (i in 1:length(sessions_list)){
sesid = sessions_list[[i]][2]
subid = sessions_list[[i]][1]
## filenames
# bold fname
bold_fname = paste0(dhcp_path(), "/dhcp_fmri_surface/sub-", subid, "/ses-", sesid, "/func_mesh-dhcp32kSym_space-extdhcp40wk_desc-cortical.dtseries.nii")
# snr fname
snr_cifti_fname = paste0(dhcp_path(), "/dhcp_fmri_surface/sub-", subid, "/ses-", sesid, "/func_mesh-dhcp32kSym_space-extdhcp40wk_desc-SNR.dscalar.nii")
# png output fname
snr_png_fname = paste0(dhcp_path(), "/snr_surface/sub-", subid, "ses-", sesid, "_func_mesh-dhcp32kSym_space-extdhcp40wk_desc-SNR")
## load snr map
snr_map = read_cifti(snr_cifti_fname, surfL_fname = midthicknessL_path(), surfR_fname = midthicknessR_path())
### write outputs
# create subfolder
dir.create(paste0(dhcp_path(), "/snr_surface/sub-", subid), showWarnings = FALSE)
dir.create(paste0(dhcp_path(), "/snr_surface/sub-", subid, "/ses-", sesid), showWarnings = FALSE)
# load surfaces
env = environment()
default_surfaces(env)
# save png image
title = paste0("SNR sub-", subid)
#view_cifti_surface(snr_map, surfL = env$surfL, surfR = env$surfR, color_mode = "sequential", title = title, fname = paste0(snr_png_fname, ".dscalar.nii"), zlim = c(0,150))
## make histogram
snr_mat = as.matrix(snr_map)
# plot histogram with ggplot (needs dataframe as input)
df = data.frame(SNR=snr_mat)
plot = ggplot(df, aes(x=SNR)) +
geom_histogram(aes(y=..count..), colour="darkgray", fill="gray", binwidth = 1, na.rm = TRUE, show.legend = TRUE, pad = TRUE) +
geom_vline(aes(xintercept=mean(SNR, na.rm = TRUE)), # mean
color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median(SNR, na.rm = TRUE)), # median
color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[1]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[2]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
labs(title=title,
x ="SNR", y = "vertices", subtitle = "red: median\nblue:mean")
#bp = ggplot(df, aes(x=SNR)) + geom_boxplot(notch = TRUE)
#grid.arrange(bp, plot, nrow = 1)
ggsave(filename = paste0(snr_png_fname, "_hist.png" ), plot = plot)
# img <- readPNG(system.file("img", "Rlogo.png", package="png"))
# g <- rasterGrob(img, interpolate=TRUE)
#
# qplot(1:10, 1:10, geom="blank") +
#   annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
#   geom_point()
#population = c(population, snr_mat)
}
#population = population[-(1:57700)]
#saveRDS(population, file = paste0(dhcp_path(), "/snr_surface/population.rds"))
# rel2_snr-show-gICA.r
# this scripts just loads the snr maps for 43wk (gICA subjects) and saves images
# 2021-12-01 - Diego
# load packages
devtools::load_all(path = "~/dhcpr")
library("ciftiTools")
wbpath = wb_path() # "~/dev-dhcp/workbench/bin_rh_linux64/wb_command" #carbonate
ciftiTools.setOption('wb_path', wbpath)
library(ggplot2)
library(gridExtra)
library(png)
library(grid)
# all subjects in table
table_fname = paste0("~/dev-dhcp/single-pipeline/results/rel2_gICA_s-24.csv")
sessions_list = dhcp_list(table_fname)
population = vector(mode = "numeric", length = 57700)
for (i in 1:length(sessions_list)){
sesid = sessions_list[[i]][2]
subid = sessions_list[[i]][1]
## filenames
# bold fname
bold_fname = paste0(dhcp_path(), "/dhcp_fmri_surface/sub-", subid, "/ses-", sesid, "/func_mesh-dhcp32kSym_space-extdhcp40wk_desc-cortical.dtseries.nii")
# snr fname
snr_cifti_fname = paste0(dhcp_path(), "/dhcp_fmri_surface/sub-", subid, "/ses-", sesid, "/func_mesh-dhcp32kSym_space-extdhcp40wk_desc-SNR.dscalar.nii")
# png output fname
snr_png_fname = paste0(dhcp_path(), "/snr_surface/sub-", subid, "ses-", sesid, "_func_mesh-dhcp32kSym_space-extdhcp40wk_desc-SNR")
## load snr map
snr_map = read_cifti(snr_cifti_fname, surfL_fname = midthicknessL_path(), surfR_fname = midthicknessR_path())
### write outputs
# create subfolder
dir.create(paste0(dhcp_path(), "/snr_surface/sub-", subid), showWarnings = FALSE)
dir.create(paste0(dhcp_path(), "/snr_surface/sub-", subid, "/ses-", sesid), showWarnings = FALSE)
# load surfaces
env = environment()
default_surfaces(env)
# save png image
title = paste0("SNR sub-", subid)
#view_cifti_surface(snr_map, surfL = env$surfL, surfR = env$surfR, color_mode = "sequential", title = title, fname = paste0(snr_png_fname, ".dscalar.nii"), zlim = c(0,150))
## make histogram
snr_mat = as.matrix(snr_map)
# plot histogram with ggplot (needs dataframe as input)
df = data.frame(SNR=snr_mat)
plot = ggplot(df, aes(x=SNR)) +
geom_histogram(aes(y=..count..), colour="darkgray", fill="gray", binwidth = 1, na.rm = TRUE) +
xlim(0, 250)
geom_vline(aes(xintercept=mean(SNR, na.rm = TRUE)), # mean
color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median(SNR, na.rm = TRUE)), # median
color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[1]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[2]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
labs(title=title,
x ="SNR", y = "vertices", subtitle = "red: median\nblue:mean")
#bp = ggplot(df, aes(x=SNR)) + geom_boxplot(notch = TRUE)
#grid.arrange(bp, plot, nrow = 1)
ggsave(filename = paste0(snr_png_fname, "_hist.png" ), plot = plot)
# img <- readPNG(system.file("img", "Rlogo.png", package="png"))
# g <- rasterGrob(img, interpolate=TRUE)
#
# qplot(1:10, 1:10, geom="blank") +
#   annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
#   geom_point()
#population = c(population, snr_mat)
}
#population = population[-(1:57700)]
#saveRDS(population, file = paste0(dhcp_path(), "/snr_surface/population.rds"))
# rel2_snr-show-gICA.r
# this scripts just loads the snr maps for 43wk (gICA subjects) and saves images
# 2021-12-01 - Diego
# load packages
devtools::load_all(path = "~/dhcpr")
library("ciftiTools")
wbpath = wb_path() # "~/dev-dhcp/workbench/bin_rh_linux64/wb_command" #carbonate
ciftiTools.setOption('wb_path', wbpath)
library(ggplot2)
library(gridExtra)
library(png)
library(grid)
# all subjects in table
table_fname = paste0("~/dev-dhcp/single-pipeline/results/rel2_gICA_s-24.csv")
sessions_list = dhcp_list(table_fname)
population = vector(mode = "numeric", length = 57700)
for (i in 1:length(sessions_list)){
sesid = sessions_list[[i]][2]
subid = sessions_list[[i]][1]
## filenames
# bold fname
bold_fname = paste0(dhcp_path(), "/dhcp_fmri_surface/sub-", subid, "/ses-", sesid, "/func_mesh-dhcp32kSym_space-extdhcp40wk_desc-cortical.dtseries.nii")
# snr fname
snr_cifti_fname = paste0(dhcp_path(), "/dhcp_fmri_surface/sub-", subid, "/ses-", sesid, "/func_mesh-dhcp32kSym_space-extdhcp40wk_desc-SNR.dscalar.nii")
# png output fname
snr_png_fname = paste0(dhcp_path(), "/snr_surface/sub-", subid, "ses-", sesid, "_func_mesh-dhcp32kSym_space-extdhcp40wk_desc-SNR")
## load snr map
snr_map = read_cifti(snr_cifti_fname, surfL_fname = midthicknessL_path(), surfR_fname = midthicknessR_path())
### write outputs
# create subfolder
dir.create(paste0(dhcp_path(), "/snr_surface/sub-", subid), showWarnings = FALSE)
dir.create(paste0(dhcp_path(), "/snr_surface/sub-", subid, "/ses-", sesid), showWarnings = FALSE)
# load surfaces
env = environment()
default_surfaces(env)
# save png image
title = paste0("SNR sub-", subid)
#view_cifti_surface(snr_map, surfL = env$surfL, surfR = env$surfR, color_mode = "sequential", title = title, fname = paste0(snr_png_fname, ".dscalar.nii"), zlim = c(0,150))
## make histogram
snr_mat = as.matrix(snr_map)
# plot histogram with ggplot (needs dataframe as input)
df = data.frame(SNR=snr_mat)
plot = ggplot(df, aes(x=SNR)) +
geom_histogram(aes(y=..count..), colour="darkgray", fill="gray", binwidth = 1, na.rm = TRUE) +
xlim(0, 250) +
geom_vline(aes(xintercept=mean(SNR, na.rm = TRUE)), # mean
color="blue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median(SNR, na.rm = TRUE)), # median
color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[1]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
geom_vline(aes(xintercept=quantile(SNR, c(1/10, 9/10)[[2]], na.rm = TRUE)), # iqr
color="lightblue", linetype="dashed", size=1) +
labs(title=title,
x ="SNR", y = "vertices", subtitle = "red: median\nblue:mean")
#bp = ggplot(df, aes(x=SNR)) + geom_boxplot(notch = TRUE)
#grid.arrange(bp, plot, nrow = 1)
ggsave(filename = paste0(snr_png_fname, "_hist.png" ), plot = plot)
# img <- readPNG(system.file("img", "Rlogo.png", package="png"))
# g <- rasterGrob(img, interpolate=TRUE)
#
# qplot(1:10, 1:10, geom="blank") +
#   annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
#   geom_point()
#population = c(population, snr_mat)
}
#population = population[-(1:57700)]
#saveRDS(population, file = paste0(dhcp_path(), "/snr_surface/population.rds"))
subid = "CC00202XX04"
sesid = "67800"
rds_path = paste0(dhcp_path(), "/template_ICA/sub-", subid, "/sub-", subid, "_ses-", sesid, "_desc-", template_name, "_t-", alpha, "_activation.RDS")
template_name = "tICA-all_k-no_R-1.2_term_b-5_v-2"
table_fname = paste0("~/dev-dhcp/single-pipeline/results/rel2_wk40.csv")
alpha = 0.01
rds_path = paste0(dhcp_path(), "/template_ICA/sub-", subid, "/sub-", subid, "_ses-", sesid, "_desc-", template_name, "_t-", alpha, "_activation.RDS")
midthickL = "/N/project/baby_ICA/surf_symatlas/week-40_hemi-left_space-dhcpSym_dens-32k_midthickness.surf.gii"
midthickR = "/N/project/baby_ICA/surf_symatlas/week-40_hemi-right_space-dhcpSym_dens-32k_midthickness.surf.gii"
sICA_fname = "/N/project/baby_ICA/groupICA/results/dhcp_s-24_c-20_k-4/melodic_IC.dscalar.nii"
sICA = read_cifti(sICA_fname, surfL_fname = midthickL, surfR_fname = midthickR)
mwallL = sICA$meta$cortex$medial_wall_mask$left
mwallR = sICA$meta$cortex$medial_wall_mask$right
z1 = (as.matrix(sICA) >= 1) * 1
t_map = readRDS(rds_path)$activation
t_map = readRDS(rds_path)$activation$active * 2
map = z1 + t_map
mask_xifti_vis = as.xifti(cortexL = map[1:hemi_v, ], cortexR = map[-(1:hemi_v), ], cortexL_mwall = mwallL, cortexR_mwall = mwallR , surfL=Lsurf, surfR=Rsurf)
hemi_v = dim(z1)[1]/2
mask_xifti_vis = as.xifti(cortexL = map[1:hemi_v, ], cortexR = map[-(1:hemi_v), ], cortexL_mwall = mwallL, cortexR_mwall = mwallR , surfL=Lsurf, surfR=Rsurf)
mask_xifti_vis = as.xifti(cortexL = map[1:hemi_v, ], cortexR = map[-(1:hemi_v), ], cortexL_mwall = mwallL, cortexR_mwall = mwallR , surfL=surfL, surfR=surfR)
view_xifti_surface(mask_xifti_vis, surfL=Lsurf, surfR=Rsurf, color_mode = 'sequential', idx = 1:c, title = "test", fname = paste0("image_t-test_week-avg_bin_t-0.01.png"), zlim = c(0,78))
c = 20
view_xifti_surface(mask_xifti_vis, surfL=Lsurf, surfR=Rsurf, color_mode = 'sequential', idx = 1:c, title = "test", fname = paste0("image_t-test_202.png"), zlim = c(0,4))
view_xifti_surface(mask_xifti_vis, surfL=surfL, surfR=surfR, color_mode = 'sequential', idx = 1:c, title = "test", fname = paste0("image_t-test_202.png"), zlim = c(0,4))
view_xifti_surface(mask_xifti_vis, surfL=surfL, surfR=surfR, color_mode = 'qualitative', color = "Set1", idx = 1:c, title = "Z>1 and t-test", fname = paste0("image_t-test_202.png"))
view_xifti_surface(mask_xifti_vis, surfL=surfL, surfR=surfR, color_mode = 'qualitative', color = "Set1", idx = 1:c, title = "Z>1 and t-test", fname = paste0("image_t-test_202.png"), legend_embed = TRUE)
view_xifti_surface(mask_xifti_vis, surfL=surfL, surfR=surfR, color_mode = 'qualitative', color = "Set1", idx = 1:c, title = "Z>1 and t-test", fname = paste0("image_t-test_202.png"), legend_embed = FALSE, legend_alllevels = TRUE)
names(z1) = "z1"
names(z1) = "Functional Mask"
map = z1 + t_map
mask_xifti_vis = as.xifti(cortexL = map[1:hemi_v, ], cortexR = map[-(1:hemi_v), ], cortexL_mwall = mwallL, cortexR_mwall = mwallR , surfL=surfL, surfR=surfR)
view_xifti_surface(mask_xifti_vis, surfL=surfL, surfR=surfR, color_mode = 'qualitative', color = "Set1", idx = 1:c, title = "Z>1 and t-test", fname = paste0("image_t-test_202.png"), legend_embed = FALSE, legend_alllevels = TRUE)
alpha = 0.05
subid = "CC00202XX04"
sesid = "67800"
rds_path = paste0(dhcp_path(), "/template_ICA/sub-", subid, "/sub-", subid, "_ses-", sesid, "_desc-", template_name, "_t-", alpha, "_activation.RDS")
midthickL = "/N/project/baby_ICA/surf_symatlas/week-40_hemi-left_space-dhcpSym_dens-32k_midthickness.surf.gii"
midthickR = "/N/project/baby_ICA/surf_symatlas/week-40_hemi-right_space-dhcpSym_dens-32k_midthickness.surf.gii"
sICA_fname = "/N/project/baby_ICA/groupICA/results/dhcp_s-24_c-20_k-4/melodic_IC.dscalar.nii"
sICA = read_cifti(sICA_fname, surfL_fname = midthickL, surfR_fname = midthickR)
mwallL = sICA$meta$cortex$medial_wall_mask$left
mwallR = sICA$meta$cortex$medial_wall_mask$right
z1 = (as.matrix(sICA) >= 1) * 1
names(z1) = "Functional Mask"
t_map = readRDS(rds_path)$activation$active * 2
map = z1 + t_map
hemi_v = dim(z1)[1]/2
mask_xifti_vis = as.xifti(cortexL = map[1:hemi_v, ], cortexR = map[-(1:hemi_v), ], cortexL_mwall = mwallL, cortexR_mwall = mwallR , surfL=surfL, surfR=surfR)
view_xifti_surface(mask_xifti_vis, surfL=surfL, surfR=surfR, color_mode = 'qualitative', color = "Set1", idx = 1:c, title = "Z>1 and t-test", fname = paste0("image_t-test_202.png"), legend_embed = FALSE, legend_alllevels = TRUE)
devtools::load_all(path = "~/dhcpr")
library("ciftiTools")
wbpath = wb_path() # "~/dev-dhcp/workbench/bin_rh_linux64/wb_command" #carbonate
ciftiTools.setOption('wb_path', wbpath)
wbpath = wb_path() # "~/dev-dhcp/workbench/bin_rh_linux64/wb_command" #carbonate
devtools::load_all(path = "~/dhcpr")
devtools::load_all(path = "~/dhcpr")
library("ciftiTools")
wbpath = wb_path() # "~/dev-dhcp/workbench/bin_rh_linux64/wb_command" #carbonate
ciftiTools.setOption('wb_path', wbpath)
library("tidyverse")
?t.test
?pnorm
pnorm(0)
pnorm(1)
pnorm(c(1,2,3,4,5,6))
pnorm(c(-51,2,3,4,5,6))
pnorm(c(-5,1,2,3,4,5,6))
pnorm()
pnorm(5)
pnorm(-1)
pnorm(-10000)
pnorm(-100)
pnorm(-10)
pnorm(range(10))
pnorm(range(100))
range(100)
range(0,100)
range(0,100,1)
pnorm(1:100)
plot(pnorm(1:100))
plot(pnorm(0.001:1))
plot(pnorm(0.001:1.001))
plot(pnorm(0.001:1.001:.001))
plot(pnorm(0.001:1.001))
plot(dnorm(-10:10))
plot(pnorm(-10:10))
plot(dnorm(-10:10))
plot(pnorm(-10:10))
plot(pnorm(-100:100))
plot(pnorm(-100:100), mean = 3)
plot(pnorm(-100:100, mean = 3))
plot(pnorm(-100:100, mean = 30))
plot(pnorm(-100:100, mean = 30, sd = 1))
plot(pnorm(-100:100, mean = 30, sd = 3))
plot(pnorm(-100:100, mean = 30, sd = 6))
plot(pnorm(-100:100, mean = 30, sd = 10))
plot(dnorm(-100:100, mean = 30, sd = 10))
plot(dnorm(-100:100, mean = 30, sd = 1))
plot(dnorm(-100:100, mean = 30, sd = 30))
plot(pnorm(-100:100, mean = 30, sd = 30))
debug(activations)
debug(templateICAr::activations)
individual_activation = function(sesinfo, template_name, save = FALSE, verbose = FALSE, alpha = 0.01){
# gets sesinfo which is a vector of characters c(subid, sesid)
sesid = sesinfo[2]
subid = sesinfo[1]
if (verbose){
print(template_name)
print(subid)
print(sesid)
}
# results filename
sub_tica_rds = paste0(dhcp_path(), "/template_ICA/sub-", subid, "/sub-", subid, "_ses-", sesid, "_desc-", template_name, ".RDS")
# load tica individual results (mean and var maps)
sub_tica_results = readRDS(sub_tica_rds)
activations = templateICAr::activations.cifti(sub_tica_results, method_p = "fdr", alpha = alpha)
# view_cifti_surface(xifti = activations$active_xifti)
# view_cifti_surface(xifti = sub_tica_results$subjICmean_xifti)
# save RDS file
if (save){
rds_path = paste0(dhcp_path(), "/template_ICA/sub-", subid, "/sub-", subid, "_ses-", sesid, "_desc-", template_name, "_t-", alpha, "_activation.RDS")
saveRDS(activations, file = rds_path)
}
return(activations)
}
template_name = "tICA-all_k-no_R-1.2_term_b-5_v-2"
table_fname = paste0("~/dev-dhcp/single-pipeline/results/rel2_wk40.csv")
sessions_list = dhcpr::dhcp_list(table_fname)
a = sessions_list[1]
individual_activation(a, template_name, save = FALSE, verbose = TRUE, alpha = 0.05)
a = sessions_list[[1]]
individual_activation(a, template_name, save = FALSE, verbose = TRUE, alpha = 0.05)
nvox
L
u
t_stat
str(t_stat)
str(pnorm(t_stat))
plot(pnorm(t_stat)[,1])
plot(pnorm(t_stat)[1,])
plot(dnorm(t_stat)[1,])
plot(dnorm(t_stat)[1:10,])
plot(dnorm(t_stat)[,1])
model {
for ( i in 1:Ntotal ) {
y[i]  ̃ dt( mu , 1/sigmaˆ2 , nu )
}
mu  ̃ dnorm( meanY , 1/(100*sdY)ˆ2 )
sigma  ̃ dunif( sdY/1000 , sdY*1000 )
nu <- nuMinusOne+1
nuMinusOne  ̃ dexp(1/29)
}
model = function() {
for ( i in 1:Ntotal ) {
y[i]  ̃ dt( mu , 1/sigmaˆ2 , nu )
}
mu  ̃ dnorm( meanY , 1/(100*sdY)ˆ2 )
sigma  ̃ dunif( sdY/1000 , sdY*1000 )
nu <- nuMinusOne+1
nuMinusOne  ̃ dexp(1/29)
}
template_name = "tICA-all_k-no_R-1.2_term_b-5_v-2"
table_fname = paste0("~/dev-dhcp/single-pipeline/results/rel2_wk40.csv")
session = dhcp_list(table_fname)[[1]]
tICA_fname = paste0(dhcp_path(), "templateICA/sub-", session[[1]], "/sub-", session[[1]], "_ses-", session[[2]], "_desc-", template_name, ".RDS")
result = readRDS(tICA_fname)
tICA_fname = paste0(dhcp_path(), "/templateICA/sub-", session[[1]], "/sub-", session[[1]], "_ses-", session[[2]], "_desc-", template_name, ".RDS")
result = readRDS(tICA_fname)
tICA_fname = paste0(dhcp_path(), "/template_ICA/sub-", session[[1]], "/sub-", session[[1]], "_ses-", session[[2]], "_desc-", template_name, ".RDS")
result = readRDS(tICA_fname)
test = t.test(x, y = NULL, alternative  = "two.sided", mu = 0)
result
str(result)
pnorm(3)
pnorm(1:100)
pnorm(-100:100)
plot(pnorm(-100:100))
u = 0
t_stat <- as.matrix((result$subjICmean - u)/sqrt(result$subjICvar))
t_stat
plot(pnorm(t_stat))
plot(1-pnorm(t_stat))
str(t_stat)
str(t_stat[,1])
str(plot(t_stat[,1])
)
plot(t_stat[,1])
plot(pnorm(t_stat[,1]))
plot(pnorm(t_stat[1,1]))
plot(pnorm(t_stat[2,1]))
plot(pnorm(t_stat[2,]))
plot(pnorm(t_stat[2:20,1]))
plot(pnorm(t_stat[2:200,1]))
?pnorm
?apply
# group t-test for a given week
# Diego - 2021-12-03
#
# input:
# 	csv file with sessions for a given week
# dependencies
devtools::load_all(path = "~/dhcpr")
library("ciftiTools")
wbpath = wb_path() # "~/dev-dhcp/workbench/bin_rh_linux64/wb_command" #carbonate
ciftiTools.setOption('wb_path', wbpath)
library("tidyverse")
library("ggplot2")
# input parameters
template_name = "tICA-all_k-no_R-1.2_term_b-5_v-2"
table_fname = paste0("~/dev-dhcp/single-pipeline/results/rel2_wk40.csv")
session = dhcp_list(table_fname)[[1]]
# get templateICA results
# test for first subject
tICA_fname = paste0(dhcp_path(), "/template_ICA/sub-", session[[1]], "/sub-", session[[1]], "_ses-", session[[2]], "_desc-", template_name, ".RDS")
result = readRDS(tICA_fname)
t_stat = apply(result$model_result$subjICmean, c(1, 2), t.test)
devtools::load_all(path = "~/dhcpr")
library("dhcpr")
#devtools::load_all(path = "~/dhcpr")
library("ciftiTools")
wbpath = wb_path() # "~/dev-dhcp/workbench/bin_rh_linux64/wb_command" #carbonate
devtools::install(pkg = ".")
devtools::load_all(path = ".")
devtools::load_all(path = ".")
remove.packages("dhcpr")
devtools::load_all(path = ".")
source('/geode2/home/u020/dderman/Carbonate/dhcpr/R/utils.r')
packageVersion("roxygen")
packageVersion("roxygen2")
gettz::gettz()
lubridate::now
function (tzone = "")
with_tz(Sys.time(), tzone)
lubridate::now
Sys.time()
Sys.setenv(TZ='America/Indianapolis')
use_gpl3_license()
source('/geode2/home/u020/dderman/Carbonate/dhcpr/R/utils.r')
create_package("dhcpr")
library("devtools")
create_package("dhcpr")
source('/geode2/home/u020/dderman/Carbonate/dhcpr/R/paths.r')
?tmap
??tmap
dhcpr::tmap
library("dhcpr")
library("dhcpr")
install.packages(dhcpr.tar.gz, repos = NULL, type =‘‘source’’)
install.packages(dhcpr.tar.gz, repos = NULL, type ="source")
setwd("/geode2/home/u020/dderman/Carbonate")
install.packages(dhcpr.tar.gz, repos = NULL, type ="source")
install.packages(dhcpr_0.0.1.tar.gz, repos = NULL, type ="source")
install.packages("dhcpr_0.0.1.tar.gz", repos = NULL, type ="source")
library("dhcpr")
?tmap
search()
